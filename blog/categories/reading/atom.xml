<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Reading | /trasteando/]]></title>
  <link href="http://rojoangel.github.io/blog/categories/reading/atom.xml" rel="self"/>
  <link href="http://rojoangel.github.io/"/>
  <updated>2015-09-16T22:48:31+02:00</updated>
  <id>http://rojoangel.github.io/</id>
  <author>
    <name><![CDATA[Angel Rojo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Optimizing the Sustainable Pace - by Paul Pagel @ 8th Light]]></title>
    <link href="http://rojoangel.github.io/blog/2015/09/16/optimizing-the-sustainable-pace/"/>
    <updated>2015-09-16T22:34:24+02:00</updated>
    <id>http://rojoangel.github.io/blog/2015/09/16/optimizing-the-sustainable-pace</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just read this post about <a href="https://blog.8thlight.com/paul-pagel/2015/09/15/optimize-sustainable-pace.html">Optimizing the Sustainable Pace</a>.</p>

<p>This are notes to myself.</p>

<blockquote><p>By doing the simplest thing that could possibly work, we’re exposing ourselves to the incidental complexity</p>

<p>The idea of sustainability assumes that resources are finite but cyclical. When you exhaust some amount of a resource, it can replenish itself only after a similar investment in its restoration.</p></blockquote>

<p>The article refers to <a href="http://shaffner.us/cs/papers/tarpit.pdf">Out of the Tar Pit - by Ben Moseley &amp; Peter Marks</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Tech Lead Paradox: Technical Needs vs Business Needs - by Pat Kua @ thekua.com@work]]></title>
    <link href="http://rojoangel.github.io/blog/2015/09/15/a-tech-lead-paradox-technical-needs-vs-business-needs/"/>
    <updated>2015-09-15T20:38:50+02:00</updated>
    <id>http://rojoangel.github.io/blog/2015/09/15/a-tech-lead-paradox-technical-needs-vs-business-needs</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just read this post <a href="https://www.thekua.com/atwork/2014/12/a-tech-lead-paradox-technical-needs-vs-business-needs/">A tech lead paradox: technical needs vs business needs</a> about the conflict between business and technical needs:</p>

<blockquote><p>A business will always put pressure on a development team to produce as much software as possible. At the same time, effective delivery of software is not possible without addressing some level of technical needs – such as technical debt, deployment pipelines, or automated test suites.</p></blockquote>

<p>The article proposes the following practices to deal with the conflict:</p>

<ul>
<li>champion time for technical needs</li>
<li>explain the business benefit of each technical need in order to build trust with non-technical people</li>
<li>work on high impact items first</li>
<li>keep a balance</li>
<li>maximize the use of &lsquo;quiet&rsquo; periods</li>
</ul>


<p>The article refers to <a href="https://www.thoughtworks.com/de/insights/blog/embracing-paradox">Embracing Paradox - by Jim Highsmith</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slides for My 'Dependency Injection Smells' Talk - by Matthias Noback @ PHP & Symfony]]></title>
    <link href="http://rojoangel.github.io/blog/2015/09/15/slides-for-my-dependency-injection-smells-talk/"/>
    <updated>2015-09-15T20:09:34+02:00</updated>
    <id>http://rojoangel.github.io/blog/2015/09/15/slides-for-my-dependency-injection-smells-talk</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just read these slides about dependency injection smells: <a href="http://php-and-symfony.matthiasnoback.nl/2013/06/slides-for-my-dependency-injection-smells-talk/">Slides for my &lsquo;Dependency Injection Smells&rsquo; talk</a></p>

<p>These are notes to myself.</p>

<h3>Dependency injection smells:</h3>

<ul>
<li>static dependency</li>
<li>missing dependency auto-recovery</li>
<li>hidden dependencies</li>
<li>creation logic reduction</li>
<li>factory methods</li>
<li>programming against an implementation</li>
<li>dependencies prohibited</li>
</ul>


<h3>Keep in mind:</h3>

<ul>
<li>be clear and open about your dependencies</li>
<li>require only a minimum amount of dependencies</li>
<li>develop with your users (other developers) in mind</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inject a Repository Instead of an Entity Manager - by Matthias Noback @ PHP & Symfony]]></title>
    <link href="http://rojoangel.github.io/blog/2015/09/15/inject-a-repository-instead-of-an-entity-manager/"/>
    <updated>2015-09-15T19:45:31+02:00</updated>
    <id>http://rojoangel.github.io/blog/2015/09/15/inject-a-repository-instead-of-an-entity-manager</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just read this post recommending to inject repository instead of an entity manager: <a href="http://php-and-symfony.matthiasnoback.nl/2014/05/inject-a-repository-instead-of-an-entity-manager/">Inject a repository instead of an entity manager</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Is Strategic Product Management? – Solving Day to Day Problems With the Long Term in Mind - by Vasco Duarte @ Software Development Today]]></title>
    <link href="http://rojoangel.github.io/blog/2015/09/14/what-is-strategic-product-management-solving-day-to-day-problems-with-the-long-term-in-mind/"/>
    <updated>2015-09-14T20:02:04+02:00</updated>
    <id>http://rojoangel.github.io/blog/2015/09/14/what-is-strategic-product-management-solving-day-to-day-problems-with-the-long-term-in-mind</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just read this post about strategic product management: <a href="http://softwaredevelopmenttoday.com/2013/03/what-is-strategic-product-management-solving-day-to-day-problems-with-the-long-term-in-mind/">What is Strategic Product Management? – solving day to day problems with the long term in mind</a></p>

<p>These are notes to myself:</p>

<p>Sometimes is easy to lose sight on the long term direction:</p>

<blockquote><p>One team that I worked with at some point coined the phrase “being a slave to the backlog” to describe the feeling of powerlessness, and being imprisoned in the relentless rhythm that took them from story to story through overtime and much stress without a clear vision or direction.</p></blockquote>

<p>We must always:</p>

<ul>
<li>begin with end in mind</li>
<li>define the product vision</li>
<li>regularly review those base on the feedback collected throughout development</li>
</ul>


<p>Strategic product management focuses on:</p>

<ul>
<li>strategy</li>
<li>portfolio</li>
<li>roadmap</li>
</ul>

]]></content>
  </entry>
  
</feed>
